#!/bin/bash

pushd .

# let's activate the build virtual environment

source /venv/build/bin/activate

# First fetch wheel and build c extensions

pip wheel \
    --find-links /wheelhouse/wheels \
    --requirement ./requirements.txt \
    --wheel-dir=/wheelhouse/wheels

rm -rf /tmp/impact_javascript
mkdir -p /tmp/impact_javascript/build 

python ./setup.py \
    build \
        -b /tmp/impact_javascript/build/ \
    bdist_wheel \
        -d /wheelhouse/wheels/ \
    egg_info \
        -e /tmp/impact_javascript

# Now let's make a Dockerfile context
# we can't symlink wheels into the 'source' directory 'docker/impact_javascript'
# because are not repeatable across machines and hence not supported by Docker.
# Instead, we just make hard copies of everything we need to build a container into a separate
# directory ('/tmp/impact_javascript'), build the container, and finally, wipe the build dir.

cp pro-Dockerfile /tmp/impact_javascript/Dockerfile

cp -r /wheelhouse/wheels /tmp/impact_javascript/.

docker build -t rebase/pro-impact-javascript /tmp/impact_javascript

docker tag rebase/pro-impact-javascript alpha.rebaseapp.com:5000/rebase/pro-impact-javascript

rm -rf /tmp/impact_javascript

deactivate

popd
